---
- name: Set build version
  set_fact:
    build: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"
    run_once: true

- name: Create new release directory
  file:
    path: "{{ app_directory }}/releases/{{ build }}"
    recurse: true
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755

- name: Extract build to new release
  unarchive:
    src: "{{ build_filename }}.{{ build_format }}"
    dest: "{{ app_directory }}/releases/{{ build }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755

- name: Set chmod on new release directory
  file:
    path: "{{ app_directory }}/releases/{{ build }}"
    recurse: true
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755

- name: Copy .env config
  template:
    src: .env.j2
    dest: "{{ app_directory }}/releases/{{ build }}/.env"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755

- name: Put version.txt
  copy:
    dest: "{{ app_directory }}/releases/{{ build }}/public/version.txt"
    content: "{{ build }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755

- name: Set link to storage
  file:
    src: "{{ app_directory }}/{{ item.src }}"
    dest: "{{ app_directory }}/{{ item.dest }}"
    state: link
    force: true
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755
  with_items:
    - {src: 'shared/storage', dest: 'releases/{{ build }}/storage'}

- include: sandbox.yml
  when: app_sandbox_enabled

- name: Deploy new release
  file:
    src: "{{ app_directory }}/{{ item.src }}"
    dest: "{{ app_directory }}/{{ item.dest }}"
    state: link
    force: true
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755
  with_items:
    - {src: 'releases/{{ build }}', dest: 'current'}
